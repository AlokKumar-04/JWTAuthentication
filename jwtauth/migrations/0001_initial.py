# Generated by Django 5.2.5 on 2025-09-02 13:53

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Full name of the user", max_length=50),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address (used for login)",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Username (used for login, 3-20 characters, letters/numbers/underscores only)",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Username can only contain letters, numbers, and underscores.",
                                regex="^[a-zA-Z0-9_]+$",
                            )
                        ],
                    ),
                ),
                (
                    "mobile_no",
                    models.CharField(
                        help_text="Mobile number with country code",
                        max_length=17,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+919876543210'.",
                                regex="^\\+91[6-9]\\d{9}$",
                            )
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_email_verified", models.BooleanField(default=False)),
                ("is_mobile_verified", models.BooleanField(default=False)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("admin", "Admin"),
                            ("moderator", "Moderator"),
                        ],
                        default="user",
                        max_length=20,
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("failed_login_attempts", models.IntegerField(default=0)),
                ("account_locked_until", models.DateTimeField(blank=True, null=True)),
                (
                    "password_changed_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "email_verification_token",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "mobile_verification_code",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                (
                    "verification_code_expires_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
                "indexes": [
                    models.Index(fields=["email"], name="users_email_4b85f2_idx"),
                    models.Index(fields=["username"], name="users_usernam_baeb4b_idx"),
                    models.Index(fields=["mobile_no"], name="users_mobile__83e3dc_idx"),
                    models.Index(fields=["is_active"], name="users_is_acti_847b48_idx"),
                ],
            },
        ),
    ]
